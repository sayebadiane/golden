<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Menu extends \App\Entity\Menu implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Menu' . "\0" . 'gestionnaire', '' . "\0" . 'App\\Entity\\Menu' . "\0" . 'menuBurgers', '' . "\0" . 'App\\Entity\\Menu' . "\0" . 'menuTailles', '' . "\0" . 'App\\Entity\\Menu' . "\0" . 'menuPortionFrites', '' . "\0" . 'App\\Entity\\Menu' . "\0" . 'menuCommandes', 'id', 'nom', 'image', 'prix', 'etat'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Menu' . "\0" . 'gestionnaire', '' . "\0" . 'App\\Entity\\Menu' . "\0" . 'menuBurgers', '' . "\0" . 'App\\Entity\\Menu' . "\0" . 'menuTailles', '' . "\0" . 'App\\Entity\\Menu' . "\0" . 'menuPortionFrites', '' . "\0" . 'App\\Entity\\Menu' . "\0" . 'menuCommandes', 'id', 'nom', 'image', 'prix', 'etat'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Menu $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getGestionnaire(): ?\App\Entity\Gestionnaire
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGestionnaire', []);

        return parent::getGestionnaire();
    }

    /**
     * {@inheritDoc}
     */
    public function setGestionnaire(?\App\Entity\Gestionnaire $gestionnaire): \App\Entity\Menu
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGestionnaire', [$gestionnaire]);

        return parent::setGestionnaire($gestionnaire);
    }

    /**
     * {@inheritDoc}
     */
    public function getMenuBurgers(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMenuBurgers', []);

        return parent::getMenuBurgers();
    }

    /**
     * {@inheritDoc}
     */
    public function addMenuBurger(\App\Entity\MenuBurger $menuBurger): \App\Entity\Menu
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMenuBurger', [$menuBurger]);

        return parent::addMenuBurger($menuBurger);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMenuBurger(\App\Entity\MenuBurger $menuBurger): \App\Entity\Menu
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMenuBurger', [$menuBurger]);

        return parent::removeMenuBurger($menuBurger);
    }

    /**
     * {@inheritDoc}
     */
    public function getMenuTailles(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMenuTailles', []);

        return parent::getMenuTailles();
    }

    /**
     * {@inheritDoc}
     */
    public function addMenuTaille(\App\Entity\MenuTaille $menuTaille): \App\Entity\Menu
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMenuTaille', [$menuTaille]);

        return parent::addMenuTaille($menuTaille);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMenuTaille(\App\Entity\MenuTaille $menuTaille): \App\Entity\Menu
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMenuTaille', [$menuTaille]);

        return parent::removeMenuTaille($menuTaille);
    }

    /**
     * {@inheritDoc}
     */
    public function getMenuPortionFrites(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMenuPortionFrites', []);

        return parent::getMenuPortionFrites();
    }

    /**
     * {@inheritDoc}
     */
    public function addMenuPortionFrite(\App\Entity\MenuPortionFrite $menuPortionFrite): \App\Entity\Menu
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMenuPortionFrite', [$menuPortionFrite]);

        return parent::addMenuPortionFrite($menuPortionFrite);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMenuPortionFrite(\App\Entity\MenuPortionFrite $menuPortionFrite): \App\Entity\Menu
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMenuPortionFrite', [$menuPortionFrite]);

        return parent::removeMenuPortionFrite($menuPortionFrite);
    }

    /**
     * {@inheritDoc}
     */
    public function validate(\Symfony\Component\Validator\Context\ExecutionContextInterface $context, $payload)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'validate', [$context, $payload]);

        return parent::validate($context, $payload);
    }

    /**
     * {@inheritDoc}
     */
    public function doublon(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'doublon', []);

        return parent::doublon();
    }

    /**
     * {@inheritDoc}
     */
    public function getMenuCommandes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMenuCommandes', []);

        return parent::getMenuCommandes();
    }

    /**
     * {@inheritDoc}
     */
    public function addMenuCommande(\App\Entity\MenuCommande $menuCommande): \App\Entity\Menu
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMenuCommande', [$menuCommande]);

        return parent::addMenuCommande($menuCommande);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMenuCommande(\App\Entity\MenuCommande $menuCommande): \App\Entity\Menu
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMenuCommande', [$menuCommande]);

        return parent::removeMenuCommande($menuCommande);
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom(string $nom): \App\Entity\Produit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage($image): \App\Entity\Produit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrix(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrix', []);

        return parent::getPrix();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrix(float $prix): \App\Entity\Produit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrix', [$prix]);

        return parent::setPrix($prix);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtat(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtat', []);

        return parent::getEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtat(string $etat): \App\Entity\Produit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtat', [$etat]);

        return parent::setEtat($etat);
    }

    /**
     * {@inheritDoc}
     */
    public function getImagefile(): ?\Symfony\Component\HttpFoundation\File\File
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImagefile', []);

        return parent::getImagefile();
    }

    /**
     * {@inheritDoc}
     */
    public function setImagefile(\Symfony\Component\HttpFoundation\File\File $imagefile): \App\Entity\Produit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImagefile', [$imagefile]);

        return parent::setImagefile($imagefile);
    }

}
